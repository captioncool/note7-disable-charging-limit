#!/sbin/sh
# installer backend

tmp=/tmp/note7-disable-charging-limit
boot=/dev/block/bootdevice/by-name/BOOT

if [ "$3" ]; then
	zip=$3
	console=/proc/$$/fd/$2
	# write the location of the console buffer to /tmp/console for other scripts to use
	echo "$console" > /tmp/console
else
	console=$(cat /tmp/console)
	[ "$console" ] || console=/proc/$$/fd/1
fi

print() {
	echo "ui_print ${1:- }" > $console
	echo
}

abort() {
	[ "$1" ] && {
		print "Error: $1"
		print "Aborting..."
	}
	cleanup
	print "Failed to patch boot image!"
	exit 1
}

cleanup() {
	[ "$zip" ] && rm /tmp/console
}

extract() {
	rm -rf "$2"
	mkdir -p "$2"
	unzip -o "$1" -d "$2"
}

print "##################################"
print "# Note 7 Charging Limit Disabler #"
print "#          version 2.0           #"
print "# KEEP FIRE EXTINGUISHER NEARBY! #"
print "##################################"

# Unpack the installer
[ "$zip" ] && {
	print "Unpacking the installer..."
	extract "$zip" "$tmp"
}
cd "$tmp" || abort "Could not enter $tmp!"

chmod 0755 bootimg

[ -x bootimg ] || abort "Could not find executable bootimg binary!"

print "Searching for boot image board magic..."

set -- $(./bootimg v "$boot" --board)

case $2 in
\"SRPPD15*)
	dtb="dtb-xx.img"
	print "Found Note 7 International ($2)"
	;;
\"SRPPD26*)
	dtb="dtb-kor.img"
	print "Found Note 7 Korea ($2)"
	;;
*)
	abort "Unable to determine device from board magic ($2)!"
	;;
esac

print "Replacing DTB..."

[ -f "$dtb" ] || abort "Could not find replacement $dtb!"

./bootimg uvv "$boot" --dt "$dtb" || abort "DTB replacement failed, see recovery.log!"

print "Boot image patching complete"

cleanup

sleep 1

print
print "Good luck with not burning your house down!"
print "With plenty of love,"
print " - jcadduono"
